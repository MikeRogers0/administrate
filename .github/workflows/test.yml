name: Tests

on:
  push:
  schedule:
    - cron: '0 0 * * *'

jobs:
  tests:
    name: RSpec
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        rails:
          - 'rails61'
          #- 'rails60'
          - 'rails52'
          #- 'rails51'
          #- 'rails50'
        ruby:
          - '3.0'
          - '2.7'
          #- '2.6'
          #- '2.5'
        exclude:
          # Ruby 3.0 does not work with <= Rails 5.2
          - rails: 'rails52'
            ruby: '3.0'
          - rails: 'rails51'
            ruby: '3.0'
          - rails: 'rails50'
            ruby: '3.0'

    services:
      postgres:
        image: postgres:13.2-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          # bundle-cache was causing the tests to fail. It was really odd.
          # bundler-cache: true
      - uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ matrix.ruby }}-${{ matrix.rails }}-${{ hashFiles('**/*.gemspec') }}
      - name: Setup environment
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/administrate-prototype_test
        run: |
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3
          bundle exec appraisal ${{ matrix.rails }} bundle install
          cp .sample.env .env
          bundle exec rake db:setup
      - name: Run the tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/administrate-prototype_test
        run: |
          bundle exec appraisal ${{ matrix.rails }} rake
